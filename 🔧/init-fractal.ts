// init-fractal.ts
const projectName = "üí†üß¨üîÅ";
const slug = "fractal-loop-core"; // fallback slug –¥–ª—è CLI
const password = "üí†üåäü´ßüß™üß¨-v1";

// 1. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ–µ–∫—Ç—É
const create = await new Deno.Command("supabase", {
    args: ["projects", "create", slug, "--db-password", password],
    stdout: "piped",
    stderr: "piped",
}).output();

if (!create.success) {
    console.error(new TextDecoder().decode(create.stderr));
    Deno.exit(1);
}

console.log("‚úÖ –ü—Ä–æ—î–∫—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ");

// 2. –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è supabase-–ø–∞–ø–∫–∏
await new Deno.Command("supabase", { args: ["init"], stdout: "inherit" })
    .output();

// 3. –õ—ñ–Ω–∫ –ø—Ä–æ—î–∫—Ç—É (–æ–±–∏—Ä–∞—î—à –∞–±–æ –¥–æ–¥–∞—î—à –≤—Ä—É—á–Ω—É)
await new Deno.Command("supabase", { args: ["link"], stdout: "inherit" })
    .output();

// 4. –ó–∞–ø–∏—Å —Ñ—Ä–∞–∫—Ç–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—é
await Deno.writeTextFile(".env", `SUPABASE_DB_PASSWORD="${password}"\n`);

console.log("‚úÖ –ü–∞—Ä–æ–ª—å –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ .env");

// 5. –ì–æ—Ç–æ–≤–æ –¥–ª—è –ø–æ–¥–∞–ª—å—à–∏—Ö –∫—Ä–æ–∫—ñ–≤: –º—ñ–≥—Ä–∞—Ü—ñ–π, —Ñ—É–Ω–∫—Ü—ñ–π, –±–∞–∫–µ—Ç—ñ–≤
console.log("üß¨ –§—Ä–∞–∫—Ç–∞–ª—å–Ω–∏–π –ø—Ä–æ—î–∫—Ç –≥–æ—Ç–æ–≤–∏–π –¥–æ –º—É—Ç–∞—Ü—ñ—ó.");
